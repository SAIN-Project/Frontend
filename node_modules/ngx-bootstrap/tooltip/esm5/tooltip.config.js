/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Default values provider for tooltip
 */
import * as ɵngcc0 from '@angular/core';
var TooltipConfig = /** @class */ (function () {
    function TooltipConfig() {
        /**
         * sets disable adaptive position
         */
        this.adaptivePosition = true;
        /**
         * tooltip placement, supported positions: 'top', 'bottom', 'left', 'right'
         */
        this.placement = 'top';
        /**
         * array of event names which triggers tooltip opening
         */
        this.triggers = 'hover focus';
        /**
         * delay before showing the tooltip
         */
        this.delay = 0;
    }
    /** @nocollapse */ TooltipConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function TooltipConfig_Factory() { return new TooltipConfig(); }, token: TooltipConfig, providedIn: "root" });
TooltipConfig.ɵfac = function TooltipConfig_Factory(t) { return new (t || TooltipConfig)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return TooltipConfig;
}());
export { TooltipConfig };
if (false) {
    /**
     * sets disable adaptive position
     * @type {?}
     */
    TooltipConfig.prototype.adaptivePosition;
    /**
     * tooltip placement, supported positions: 'top', 'bottom', 'left', 'right'
     * @type {?}
     */
    TooltipConfig.prototype.placement;
    /**
     * array of event names which triggers tooltip opening
     * @type {?}
     */
    TooltipConfig.prototype.triggers;
    /**
     * a selector specifying the element the tooltip should be appended to.
     * @type {?}
     */
    TooltipConfig.prototype.container;
    /**
     * delay before showing the tooltip
     * @type {?}
     */
    TooltipConfig.prototype.delay;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5jb25maWcuanMiLCJzb3VyY2VzIjpbIm5neC1ib290c3RyYXAvdG9vbHRpcC90b29sdGlwLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQztBQUNvQztBQUFJO0FBR3ZDOztBQUZEO0FBR1csSUFIWDtBQUNhO0FBRVo7QUFDYTtBQUFZLFFBQ3hCLHFCQUFnQixHQUFHLElBQUksQ0FBQztBQUMxQjtBQUFZO0FBQ0U7QUFDVCxRQURILGNBQVMsR0FBRyxLQUFLLENBQUM7QUFDcEI7QUFBWTtBQUNFO0FBQVksUUFBeEIsYUFBUSxHQUFHLGFBQWEsQ0FBQztBQUMzQjtBQUFZO0FBQTRDO0FBQVksUUFHbEUsVUFBSyxHQUFHLENBQUMsQ0FBQztBQUNaLEtBQUMsQUFYUTtpREFIUixVQUFVLFNBQUMsc0JBQ1YsVUFBVSxFQUFFLE1BQU0sa0JBQ25CLDlIQUNTOzs7Ozs7O2dEQUlVO0FBQ3BCLHdCQVhBO0FBQUUsQ0FpQkQsQUFkRCxJQWNDO0FBQ0QsU0FaYSxhQUFhO0FBQ3pCO0FBQWE7QUFBUTtBQUNGO0FBQ1Y7QUFBUSxJQURoQix5Q0FBd0I7QUFDMUI7QUFBUTtBQUNGO0FBQ0o7QUFBUSxJQURSLGtDQUFrQjtBQUNwQjtBQUFRO0FBQ0Y7QUFBaUI7QUFDcEIsSUFERCxpQ0FBeUI7QUFDM0I7QUFBUTtBQUNGO0FBQ0o7QUFBUSxJQURSLGtDQUFrQjtBQUNwQjtBQUFRO0FBQ0Y7QUFFRTtBQUFRLElBRmQsOEJBQVU7O0FBaEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBZEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUxBLEFBaUJBLEFBZEEsQUFjQSxBQVhBLEFBQUEsQUFFQSxBQUFBLEFBRUEsQUFBQSxBQUVBLEFBQUEsQUFFQSxBQUFBLEFBRUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqIERlZmF1bHQgdmFsdWVzIHByb3ZpZGVyIGZvciB0b29sdGlwICovXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBUb29sdGlwQ29uZmlnIHtcbiAgLyoqIHNldHMgZGlzYWJsZSBhZGFwdGl2ZSBwb3NpdGlvbiAqL1xuICBhZGFwdGl2ZVBvc2l0aW9uID0gdHJ1ZTtcbiAgLyoqIHRvb2x0aXAgcGxhY2VtZW50LCBzdXBwb3J0ZWQgcG9zaXRpb25zOiAndG9wJywgJ2JvdHRvbScsICdsZWZ0JywgJ3JpZ2h0JyAqL1xuICBwbGFjZW1lbnQgPSAndG9wJztcbiAgLyoqIGFycmF5IG9mIGV2ZW50IG5hbWVzIHdoaWNoIHRyaWdnZXJzIHRvb2x0aXAgb3BlbmluZyAqL1xuICB0cmlnZ2VycyA9ICdob3ZlciBmb2N1cyc7XG4gIC8qKiBhIHNlbGVjdG9yIHNwZWNpZnlpbmcgdGhlIGVsZW1lbnQgdGhlIHRvb2x0aXAgc2hvdWxkIGJlIGFwcGVuZGVkIHRvLiAqL1xuICBjb250YWluZXI6IHN0cmluZztcbiAgLyoqIGRlbGF5IGJlZm9yZSBzaG93aW5nIHRoZSB0b29sdGlwICovXG4gIGRlbGF5ID0gMDtcbn1cbiJdfQ==