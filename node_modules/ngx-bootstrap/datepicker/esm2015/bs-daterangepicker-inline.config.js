/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { BsDatepickerConfig } from './bs-datepicker.config';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export class BsDaterangepickerInlineConfig extends BsDatepickerConfig {
    constructor() {
        super(...arguments);
        // DatepickerRenderOptions
        this.displayMonths = 2;
        /**
         * turn on/off animation
         */
        this.isAnimated = false;
    }
}
BsDaterangepickerInlineConfig.ɵfac = function BsDaterangepickerInlineConfig_Factory(t) { return ɵBsDaterangepickerInlineConfig_BaseFactory(t || BsDaterangepickerInlineConfig); };
/** @nocollapse */ BsDaterangepickerInlineConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function BsDaterangepickerInlineConfig_Factory() { return new BsDaterangepickerInlineConfig(); }, token: BsDaterangepickerInlineConfig, providedIn: "root" });
const ɵBsDaterangepickerInlineConfig_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(BsDaterangepickerInlineConfig);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BsDaterangepickerInlineConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], null, null); })();
if (false) {
    /** @type {?} */
    BsDaterangepickerInlineConfig.prototype.displayMonths;
    /**
     * turn on/off animation
     * @type {?}
     */
    BsDaterangepickerInlineConfig.prototype.isAnimated;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXJhbmdlcGlja2VyLWlubGluZS5jb25maWcuanMiLCJzb3VyY2VzIjpbIm5neC1ib290c3RyYXAvZGF0ZXBpY2tlci9icy1kYXRlcmFuZ2VwaWNrZXItaW5saW5lLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RDs7QUFJQSxNQUFNLE9BQU8sNkJBQThCLFNBQVEsa0JBQWtCO0FBQ3JFLElBSkE7QUFDRTtBQUVLO0FBQW1DLFFBRXRDLGtCQUFhLEdBQUcsQ0FBQyxDQUFDO0FBQ3RCO0FBQVk7QUFDQTtBQUNaLFFBREksZUFBVSxHQUFHLEtBQUssQ0FBQztBQUN2QixLQUFDO0FBQ0Q7eURBVEMsVUFBVSxTQUFDLGtCQUNWLFVBQVUsRUFBRSxNQUFNLGNBQ25CLG9EQUNJO0FBQUM7Ozs7Ozs7MEJBTStEO0FBQUM7QUFBYTtBQUFxQixJQUpwRyxzREFBa0I7QUFDdEI7QUFBUTtBQUNKO0FBQWlCO0FBRWxCLElBRkMsbURBQW1COztBQVZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBSEEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBUkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUdBLEFBQUEsQUFFQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnNEYXRlcGlja2VyQ29uZmlnIH0gZnJvbSAnLi9icy1kYXRlcGlja2VyLmNvbmZpZyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIEJzRGF0ZXJhbmdlcGlja2VySW5saW5lQ29uZmlnIGV4dGVuZHMgQnNEYXRlcGlja2VyQ29uZmlnIHtcbiAgICAvLyBEYXRlcGlja2VyUmVuZGVyT3B0aW9uc1xuICAgIGRpc3BsYXlNb250aHMgPSAyO1xuICAgIC8qKiB0dXJuIG9uL29mZiBhbmltYXRpb24gKi9cbiAgICBpc0FuaW1hdGVkID0gZmFsc2U7XG59XG4iXX0=