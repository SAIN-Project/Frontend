/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Default dropdown configuration
 */
import * as ɵngcc0 from '@angular/core';
export class BsDropdownConfig {
    constructor() {
        /**
         * default dropdown auto closing behavior
         */
        this.autoClose = true;
        /**
         * default dropdown auto closing behavior
         */
        this.insideClick = false;
        /**
         * turn on/off animation
         */
        this.isAnimated = false;
    }
}
BsDropdownConfig.ɵfac = function BsDropdownConfig_Factory(t) { return new (t || BsDropdownConfig)(); };
/** @nocollapse */ BsDropdownConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function BsDropdownConfig_Factory() { return new BsDropdownConfig(); }, token: BsDropdownConfig, providedIn: "root" });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BsDropdownConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
if (false) {
    /**
     * default dropdown auto closing behavior
     * @type {?}
     */
    BsDropdownConfig.prototype.autoClose;
    /**
     * default dropdown auto closing behavior
     * @type {?}
     */
    BsDropdownConfig.prototype.insideClick;
    /**
     * turn on/off animation
     * @type {?}
     */
    BsDropdownConfig.prototype.isAnimated;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZHJvcGRvd24uY29uZmlnLmpzIiwic291cmNlcyI6WyJuZ3gtYm9vdHN0cmFwL2Ryb3Bkb3duL2JzLWRyb3Bkb3duLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQztBQUNvQztBQUNsQztBQUVEOztBQUNELE1BQU0sT0FBTyxnQkFBZ0I7QUFDN0IsSUFKQTtBQUNFO0FBQVk7QUFHTjtBQUFZLFFBQ2xCLGNBQVMsR0FBRyxJQUFJLENBQUM7QUFDbkI7QUFBWTtBQUNFO0FBQ1gsUUFERCxnQkFBVyxHQUFHLEtBQUssQ0FBQztBQUN0QjtBQUFZO0FBQ0U7QUFFWixRQUZBLGVBQVUsR0FBRyxLQUFLLENBQUM7QUFDckIsS0FBQztBQUNEOzRDQVhDLFVBQVUsU0FBQyxrQkFDVixVQUFVLEVBQUUsTUFBTSxJQUVmO1NBREosVEFDSzs7Ozs7O2dEQU1OO0FBQUM7QUFBYTtBQUNkO0FBQzRDO0FBQWlCO0FBQVEsSUFObkUscUNBQWlCO0FBQ25CO0FBQVE7QUFDRjtBQUNOO0FBQVEsSUFETix1Q0FBb0I7QUFDdEI7QUFBUTtBQUNGO0FBQ0w7QUFDTSxJQUZMLHNDQUFtQjs7QUFaQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBTUEsQUFBQSxBQUFBLEFBQUEsQUFIQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBVkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUdBLEFBQUEsQUFFQSxBQUFBLEFBRUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqIERlZmF1bHQgZHJvcGRvd24gY29uZmlndXJhdGlvbiAqL1xuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgQnNEcm9wZG93bkNvbmZpZyB7XG4gIC8qKiBkZWZhdWx0IGRyb3Bkb3duIGF1dG8gY2xvc2luZyBiZWhhdmlvciAqL1xuICBhdXRvQ2xvc2UgPSB0cnVlO1xuICAvKiogZGVmYXVsdCBkcm9wZG93biBhdXRvIGNsb3NpbmcgYmVoYXZpb3IgKi9cbiAgaW5zaWRlQ2xpY2sgPSBmYWxzZTtcbiAgLyoqIHR1cm4gb24vb2ZmIGFuaW1hdGlvbiAqL1xuICBpc0FuaW1hdGVkID0gZmFsc2U7XG59XG4iXX0=