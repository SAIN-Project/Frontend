{"version":3,"file":"rete-angular-render-plugin.js","sources":["rete-angular-render-plugin/node.service.ts","rete-angular-render-plugin/node/node.component.ts","rete-angular-render-plugin/kebab.pipe.ts","rete-angular-render-plugin/socket/socket.component.ts","rete-angular-render-plugin/control.directive.ts","rete-angular-render-plugin/socket.directive.ts","rete-angular-render-plugin/custom.component.ts","rete-angular-render-plugin/module.ts","rete-angular-render-plugin/index.ts","rete-angular-render-plugin/rete-angular-render-plugin.ts"],"names":["tslib_1.__decorate","ReteInput"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BindControl, BindSocket } from './types';\n\n@Injectable()\nexport class NodeService {\n  public bindSocket: BindSocket;\n  public bindControl: BindControl;\n  \n  setBindings(bindSocket, bindControl) {\n    this.bindSocket = bindSocket;\n    this.bindControl = bindControl;\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NodeEditor, Node, Input as ReteInput, Output as ReteOutput, Control as ReteControl } from 'rete';\nimport { NodeService } from '../node.service';\n\n@Component({\n  templateUrl: './node.component.html',\n  styleUrls: ['./node.component.sass'],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NodeComponent {\n  @Input() editor!: NodeEditor;\n  @Input() node!: Node;\n  @Input() bindSocket!: Function;\n  @Input() bindControl!: Function;\n\n  constructor(protected service: NodeService, protected cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.service.setBindings(this.bindSocket, this.bindControl);\n    this.node.update = () => this.cdr.detectChanges();\n  }\n\n  get inputs() {\n    return Array.from(this.node.inputs.values());\n  }\n\n  get outputs() {\n    return Array.from(this.node.outputs.values());\n  }\n\n  get controls() {\n    return Array.from(this.node.controls.values());\n  }\n\n  selected() {\n    return this.editor.selected.contains(this.node) ? 'selected' : '';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\ntype ClassAttr = string | string[];\n\n@Pipe({name: 'kebab'})\nexport class KebabPipe implements PipeTransform {\n\n  replace(s: string) {\n    return s.toLowerCase().replace(/ /g, '-');\n  }\n\n  transform(value: ClassAttr): ClassAttr {\n    return Array.isArray(value) ? value.map(s => this.replace(s)) : this.replace(value);\n  }\n}","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Socket, IO, Input as ReteInput } from 'rete';\nimport { SocketType } from '../types';\n\n@Component({\n  selector: 'rete-socket',\n  template: `<div *ngIf=\"socket\" class=\"socket\" [ngClass]=\"[type, socket.name]\" [title]=\"socket.name\"></div>`,\n  styleUrls: ['./socket.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SocketComponent {\n  @Input() socket!: Socket;\n  @Input() io!: IO;\n\n  get type(): SocketType {\n    return this.io instanceof ReteInput ? 'input' : 'output';\n  }\n}\n","import { Directive, Input, ElementRef, OnInit } from '@angular/core';\nimport { Control } from 'rete';\nimport { NodeService } from './node.service';\n\n@Directive({\n  selector: '[rete-control]'\n})\nexport class ControlDirective implements OnInit {\n  @Input('rete-control') control!: Control;\n\n  constructor(private el: ElementRef, private service: NodeService) {}\n\n  ngOnInit() {\n    this.service.bindControl(this.el.nativeElement, this.control);\n  }\n}\n","import { Directive, Input, ElementRef, OnInit } from '@angular/core';\nimport { IO, Input as ReteInput } from 'rete';\nimport { NodeService } from './node.service';\nimport { SocketType } from './types';\n\n@Directive({\n  selector: '[rete-socket]'\n})\nexport class SocketDirective implements OnInit {\n    @Input() io!: IO;\n  \n    constructor(private el: ElementRef, private service: NodeService) {}\n  \n    get type(): SocketType {\n      return this.io instanceof ReteInput ? 'input' : 'output';\n    }\n  \n    ngOnInit() {\n      this.service.bindSocket(this.el.nativeElement, this.type, this.io);\n    }\n}\n","import { Component, Input, OnInit, Injector, ComponentFactoryResolver, ViewContainerRef, Type, ChangeDetectionStrategy } from '@angular/core';\nimport { Props } from './types';\n\n@Component({\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomComponent implements OnInit {\n  @Input() component!: Type<Component>;\n  @Input() props!: Props;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private injector: Injector,\n    private factoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit() {\n    const factory = this.factoryResolver.resolveComponentFactory(this.component);\n    const componentRef = factory.create(this.injector);\n    const { props } = this;\n\n    for(let key in props) {\n      Object.defineProperty(componentRef.instance, key, {\n        get() { return props[key]; },\n        set(val) { props[key] = val; }\n      })\n    }\n\n    this.vcr.insert(componentRef.hostView);\n  }\n\n  ngOnDestroy() {\n    this.vcr.detach(0);\n  }\n}\n","import { NgModule, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { createCustomElement } from '@angular/elements';\n\nimport { KebabPipe } from './kebab.pipe';\nimport { NodeComponent } from './node/node.component';\nimport { SocketComponent } from './socket/socket.component';\nimport { ControlDirective } from './control.directive';\nimport { SocketDirective } from './socket.directive';\nimport { CustomComponent } from './custom.component';\n\n@NgModule({\n  declarations: [\n    NodeComponent,\n    SocketComponent,\n    CustomComponent,\n    ControlDirective,\n    SocketDirective,\n    KebabPipe,\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    KebabPipe,\n    ControlDirective\n  ],\n  exports: [\n    NodeComponent,\n    CustomComponent,\n    SocketComponent,\n    ControlDirective,\n    SocketDirective,\n    KebabPipe\n  ],\n  entryComponents: [\n    NodeComponent,\n    SocketComponent,\n    CustomComponent\n  ]\n})\nexport class ReteModule {\n  constructor(injector: Injector) { // StaticInjectorError due to 'npm link'\n    const CustomElement = createCustomElement(CustomComponent, { injector });\n    if (!customElements.get('rete-element')) customElements.define('rete-element', CustomElement);\n  }\n}\n","import { Type } from '@angular/core';\nimport { NodeEditor } from 'rete';\nimport { AngularControl, ElementProps, AngularComponentData } from './types';\nimport { NodeComponent } from './node/node.component';\n\nfunction install(editor: NodeEditor, params : { component?: Type<any> } = {}) {\n    editor.on('rendernode', ({ el, node, component, bindControl, bindSocket }) => {\n        const ngComponent = component as unknown as AngularComponentData;\n\n        if (ngComponent.render && ngComponent.render !== 'angular') return;\n\n        const element = document.createElement('rete-element');\n        const props: ElementProps = element as any;\n\n        props.component = ngComponent.component || params.component || NodeComponent;\n        props.props = Object.assign({}, ngComponent.props || {}, {\n            node,\n            editor,\n            bindControl,\n            bindSocket\n        });\n\n        el.appendChild(element);\n    });\n\n    editor.on('rendercontrol', ({ el, control }) => {\n        const ngControl = control as unknown as AngularControl;\n\n        if (ngControl.render && ngControl.render !== 'angular') return;\n\n        const element = document.createElement('rete-element');\n        const props: ElementProps = element as any;\n\n        props.component = ngControl.component;\n        props.props = ngControl.props;\n\n        el.appendChild(element);\n    });\n    editor.on(['connectioncreated', 'connectionremoved'], connection => {\n        connection.output.node.update();\n        connection.input.node.update();\n    });\n    editor.on('nodeselected', () => {\n        editor.nodes.forEach(n => n.update());\n    });\n}\n\nexport const AngularRenderPlugin = {\n    name: 'angular-render',\n    install\n};\nexport { ReteModule } from './module';\nexport * from './types';\nexport { NodeService } from './node.service';\nexport { NodeComponent } from './node/node.component';\nexport { SocketComponent } from './socket/socket.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ControlDirective as Éµb} from './control.directive';\nexport {CustomComponent as Éµa} from './custom.component';\nexport {KebabPipe as Éµd} from './kebab.pipe';\nexport {SocketDirective as Éµc} from './socket.directive';"]}