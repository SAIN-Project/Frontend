import * as tslib_1 from "tslib";
import { NgModule, Injector } from '@angular/core';
import { CommonModule } from '@angular/common';
import { createCustomElement } from '@angular/elements';
import { KebabPipe } from './kebab.pipe';
import { NodeComponent } from './node/node.component';
import { SocketComponent } from './socket/socket.component';
import { ControlDirective } from './control.directive';
import { SocketDirective } from './socket.directive';
import { CustomComponent } from './custom.component';
let ReteModule = class ReteModule {
    constructor(injector) {
        const CustomElement = createCustomElement(CustomComponent, { injector });
        if (!customElements.get('rete-element'))
            customElements.define('rete-element', CustomElement);
    }
};
ReteModule.ctorParameters = () => [
    { type: Injector }
];
ReteModule = tslib_1.__decorate([
    NgModule({
        declarations: [
            NodeComponent,
            SocketComponent,
            CustomComponent,
            ControlDirective,
            SocketDirective,
            KebabPipe,
        ],
        imports: [
            CommonModule
        ],
        providers: [
            KebabPipe,
            ControlDirective
        ],
        exports: [
            NodeComponent,
            CustomComponent,
            SocketComponent,
            ControlDirective,
            SocketDirective,
            KebabPipe
        ],
        entryComponents: [
            NodeComponent,
            SocketComponent,
            CustomComponent
        ]
    })
], ReteModule);
export { ReteModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vcmV0ZS1hbmd1bGFyLXJlbmRlci1wbHVnaW4vIiwic291cmNlcyI6WyJtb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUV4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQWdDckQsSUFBYSxVQUFVLEdBQXZCLE1BQWEsVUFBVTtJQUNyQixZQUFZLFFBQWtCO1FBQzVCLE1BQU0sYUFBYSxHQUFHLG1CQUFtQixDQUFDLGVBQWUsRUFBRSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDekUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDO1lBQUUsY0FBYyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDaEcsQ0FBQztDQUNGLENBQUE7O1lBSnVCLFFBQVE7O0FBRG5CLFVBQVU7SUE5QnRCLFFBQVEsQ0FBQztRQUNSLFlBQVksRUFBRTtZQUNaLGFBQWE7WUFDYixlQUFlO1lBQ2YsZUFBZTtZQUNmLGdCQUFnQjtZQUNoQixlQUFlO1lBQ2YsU0FBUztTQUNWO1FBQ0QsT0FBTyxFQUFFO1lBQ1AsWUFBWTtTQUNiO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsU0FBUztZQUNULGdCQUFnQjtTQUNqQjtRQUNELE9BQU8sRUFBRTtZQUNQLGFBQWE7WUFDYixlQUFlO1lBQ2YsZUFBZTtZQUNmLGdCQUFnQjtZQUNoQixlQUFlO1lBQ2YsU0FBUztTQUNWO1FBQ0QsZUFBZSxFQUFFO1lBQ2YsYUFBYTtZQUNiLGVBQWU7WUFDZixlQUFlO1NBQ2hCO0tBQ0YsQ0FBQztHQUNXLFVBQVUsQ0FLdEI7U0FMWSxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgY3JlYXRlQ3VzdG9tRWxlbWVudCB9IGZyb20gJ0Bhbmd1bGFyL2VsZW1lbnRzJztcblxuaW1wb3J0IHsgS2ViYWJQaXBlIH0gZnJvbSAnLi9rZWJhYi5waXBlJztcbmltcG9ydCB7IE5vZGVDb21wb25lbnQgfSBmcm9tICcuL25vZGUvbm9kZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU29ja2V0Q29tcG9uZW50IH0gZnJvbSAnLi9zb2NrZXQvc29ja2V0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb250cm9sRGlyZWN0aXZlIH0gZnJvbSAnLi9jb250cm9sLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTb2NrZXREaXJlY3RpdmUgfSBmcm9tICcuL3NvY2tldC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ3VzdG9tQ29tcG9uZW50IH0gZnJvbSAnLi9jdXN0b20uY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTm9kZUNvbXBvbmVudCxcbiAgICBTb2NrZXRDb21wb25lbnQsXG4gICAgQ3VzdG9tQ29tcG9uZW50LFxuICAgIENvbnRyb2xEaXJlY3RpdmUsXG4gICAgU29ja2V0RGlyZWN0aXZlLFxuICAgIEtlYmFiUGlwZSxcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBLZWJhYlBpcGUsXG4gICAgQ29udHJvbERpcmVjdGl2ZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgTm9kZUNvbXBvbmVudCxcbiAgICBDdXN0b21Db21wb25lbnQsXG4gICAgU29ja2V0Q29tcG9uZW50LFxuICAgIENvbnRyb2xEaXJlY3RpdmUsXG4gICAgU29ja2V0RGlyZWN0aXZlLFxuICAgIEtlYmFiUGlwZVxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtcbiAgICBOb2RlQ29tcG9uZW50LFxuICAgIFNvY2tldENvbXBvbmVudCxcbiAgICBDdXN0b21Db21wb25lbnRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBSZXRlTW9kdWxlIHtcbiAgY29uc3RydWN0b3IoaW5qZWN0b3I6IEluamVjdG9yKSB7IC8vIFN0YXRpY0luamVjdG9yRXJyb3IgZHVlIHRvICducG0gbGluaydcbiAgICBjb25zdCBDdXN0b21FbGVtZW50ID0gY3JlYXRlQ3VzdG9tRWxlbWVudChDdXN0b21Db21wb25lbnQsIHsgaW5qZWN0b3IgfSk7XG4gICAgaWYgKCFjdXN0b21FbGVtZW50cy5nZXQoJ3JldGUtZWxlbWVudCcpKSBjdXN0b21FbGVtZW50cy5kZWZpbmUoJ3JldGUtZWxlbWVudCcsIEN1c3RvbUVsZW1lbnQpO1xuICB9XG59XG4iXX0=