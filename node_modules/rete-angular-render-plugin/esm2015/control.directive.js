import * as tslib_1 from "tslib";
import { Directive, Input, ElementRef, OnInit } from '@angular/core';
import { NodeService } from './node.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './node.service';
let ControlDirective = class ControlDirective {
    constructor(el, service) {
        this.el = el;
        this.service = service;
    }
    ngOnInit() {
        this.service.bindControl(this.el.nativeElement, this.control);
    }
};
ControlDirective.ɵfac = function ControlDirective_Factory(t) { return new (t || ControlDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NodeService)); };
ControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ControlDirective, selectors: [["", "rete-control", ""]], inputs: { control: ["rete-control", "control"] } });
ControlDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: NodeService }
];
tslib_1.__decorate([
    Input('rete-control')
], ControlDirective.prototype, "control", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ControlDirective, [{
        type: Directive,
        args: [{
                selector: '[rete-control]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.NodeService }]; }, { control: [{
            type: Input,
            args: ['rete-control']
        }] }); })();
export { ControlDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbInJldGUtYW5ndWxhci1yZW5kZXItcGx1Z2luL2NvbnRyb2wuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXJFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7O0FBSzdDLElBQWEsZ0JBQWdCLEdBQTdCLE1BQWEsZ0JBQWdCO0FBQUcsSUFHOUIsWUFBb0IsRUFBYyxFQUFVLE9BQW9CO0FBQUksUUFBaEQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtBQUFDLFFBQVMsWUFBTyxHQUFQLE9BQU8sQ0FBYTtBQUFDLElBQUUsQ0FBQztBQUN0RSxJQUNFLFFBQVE7QUFDVixRQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNsRSxJQUFFLENBQUM7QUFDSCxDQUFDOztzS0FBQTtBQUNEO0FBQTBDLFlBTmhCLFVBQVU7QUFBSSxZQUFlLFdBQVc7QUFBRztBQUY1QztBQUV4QixJQUZFLEtBQUssQ0FBQyxjQUFjLENBQUM7QUFBQyxpREFBa0I7QUFEOUIsZ0JBQWdCLDRCQUg1QixTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUU7ZUFBZ0IsTUFDM0IsQ0FBQztDQUNXO0FBQWdCLENBUTVCOzs7OztvQkFDRDs7QUFoQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBTEEsQUFBQSxBQUFBLEFBQUEsQUFGQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQURBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBUUEsQUFSQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgRWxlbWVudFJlZiwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sIH0gZnJvbSAncmV0ZSc7XG5pbXBvcnQgeyBOb2RlU2VydmljZSB9IGZyb20gJy4vbm9kZS5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3JldGUtY29udHJvbF0nXG59KVxuZXhwb3J0IGNsYXNzIENvbnRyb2xEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoJ3JldGUtY29udHJvbCcpIGNvbnRyb2whOiBDb250cm9sO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsIHByaXZhdGUgc2VydmljZTogTm9kZVNlcnZpY2UpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zZXJ2aWNlLmJpbmRDb250cm9sKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgdGhpcy5jb250cm9sKTtcbiAgfVxufVxuIl19