import * as tslib_1 from "tslib";
import { Directive, Input, ElementRef, OnInit } from '@angular/core';
import { Input as ReteInput } from 'rete';
import { NodeService } from './node.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './node.service';
let SocketDirective = class SocketDirective {
    constructor(el, service) {
        this.el = el;
        this.service = service;
    }
    get type() {
        return this.io instanceof ReteInput ? 'input' : 'output';
    }
    ngOnInit() {
        this.service.bindSocket(this.el.nativeElement, this.type, this.io);
    }
};
SocketDirective.ɵfac = function SocketDirective_Factory(t) { return new (t || SocketDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NodeService)); };
SocketDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SocketDirective, selectors: [["", "rete-socket", ""]], inputs: { io: "io" } });
SocketDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: NodeService }
];
tslib_1.__decorate([
    Input()
], SocketDirective.prototype, "io", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SocketDirective, [{
        type: Directive,
        args: [{
                selector: '[rete-socket]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.NodeService }]; }, { io: [{
            type: Input
        }] }); })();
export { SocketDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ja2V0LmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsicmV0ZS1hbmd1bGFyLXJlbmRlci1wbHVnaW4vc29ja2V0LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQU0sS0FBSyxJQUFJLFNBQVMsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUM5QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7OztBQU03QyxJQUFhLGVBQWUsR0FBNUIsTUFBYSxlQUFlO0FBQUcsSUFHM0IsWUFBb0IsRUFBYyxFQUFVLE9BQW9CO0FBQUksUUFBaEQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtBQUFDLFFBQVMsWUFBTyxHQUFQLE9BQU8sQ0FBYTtBQUFDLElBQUUsQ0FBQztBQUN4RSxJQUNJLElBQUksSUFBSTtBQUFLLFFBQ1gsT0FBTyxJQUFJLENBQUMsRUFBRSxZQUFZLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7QUFDL0QsSUFBSSxDQUFDO0FBQ0wsSUFDSSxRQUFRO0FBQ1osUUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN6RSxJQUFJLENBQUM7QUFDTCxDQUFDOzt1SUFBQTtBQUNEO0FBQXlDLFlBVmIsVUFBVTtBQUFJLFlBQWUsV0FBVztBQUFHO0FBRjFEO0FBRUosSUFGSixLQUFLLEVBQUU7QUFBQywyQ0FBUTtBQURSLGVBQWUsNEJBSDNCLFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRTtjQUFlLE1BQzFCLENBQUM7QUFDVyxlQUFlLENBWTNCOzs7OztvQkFDRDs7QUFyQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU1BLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQVRBLEFBQUEsQUFBQSxBQUFBLEFBRkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQURBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBWUEsQUFaQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgRWxlbWVudFJlZiwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJTywgSW5wdXQgYXMgUmV0ZUlucHV0IH0gZnJvbSAncmV0ZSc7XG5pbXBvcnQgeyBOb2RlU2VydmljZSB9IGZyb20gJy4vbm9kZS5zZXJ2aWNlJztcbmltcG9ydCB7IFNvY2tldFR5cGUgfSBmcm9tICcuL3R5cGVzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3JldGUtc29ja2V0XSdcbn0pXG5leHBvcnQgY2xhc3MgU29ja2V0RGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBASW5wdXQoKSBpbyE6IElPO1xuICBcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmLCBwcml2YXRlIHNlcnZpY2U6IE5vZGVTZXJ2aWNlKSB7fVxuICBcbiAgICBnZXQgdHlwZSgpOiBTb2NrZXRUeXBlIHtcbiAgICAgIHJldHVybiB0aGlzLmlvIGluc3RhbmNlb2YgUmV0ZUlucHV0ID8gJ2lucHV0JyA6ICdvdXRwdXQnO1xuICAgIH1cbiAgXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICB0aGlzLnNlcnZpY2UuYmluZFNvY2tldCh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsIHRoaXMudHlwZSwgdGhpcy5pbyk7XG4gICAgfVxufVxuIl19