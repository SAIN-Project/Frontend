{"version":3,"file":"rete-angular-render-plugin.js","sources":["rete-angular-render-plugin/node.service.ts","rete-angular-render-plugin/node/node.component.ts","rete-angular-render-plugin/kebab.pipe.ts","rete-angular-render-plugin/socket/socket.component.ts","rete-angular-render-plugin/control.directive.ts","rete-angular-render-plugin/socket.directive.ts","rete-angular-render-plugin/custom.component.ts","rete-angular-render-plugin/module.ts","rete-angular-render-plugin/index.ts","rete-angular-render-plugin/rete-angular-render-plugin.ts"],"names":["tslib_1.__decorate","ReteInput"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BindControl, BindSocket } from './types';\n\n@Injectable()\nexport class NodeService {\n  public bindSocket: BindSocket;\n  public bindControl: BindControl;\n  \n  setBindings(bindSocket, bindControl) {\n    this.bindSocket = bindSocket;\n    this.bindControl = bindControl;\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NodeEditor, Node, Input as ReteInput, Output as ReteOutput, Control as ReteControl } from 'rete';\nimport { NodeService } from '../node.service';\n\n@Component({\n  templateUrl: './node.component.html',\n  styleUrls: ['./node.component.sass'],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NodeComponent {\n  @Input() editor!: NodeEditor;\n  @Input() node!: Node;\n  @Input() bindSocket!: Function;\n  @Input() bindControl!: Function;\n\n  constructor(protected service: NodeService, protected cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.service.setBindings(this.bindSocket, this.bindControl);\n    this.node.update = () => this.cdr.detectChanges();\n  }\n\n  get inputs() {\n    return Array.from(this.node.inputs.values());\n  }\n\n  get outputs() {\n    return Array.from(this.node.outputs.values());\n  }\n\n  get controls() {\n    return Array.from(this.node.controls.values());\n  }\n\n  selected() {\n    return this.editor.selected.contains(this.node) ? 'selected' : '';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\ntype ClassAttr = string | string[];\n\n@Pipe({name: 'kebab'})\nexport class KebabPipe implements PipeTransform {\n\n  replace(s: string) {\n    return s.toLowerCase().replace(/ /g, '-');\n  }\n\n  transform(value: ClassAttr): ClassAttr {\n    return Array.isArray(value) ? value.map(s => this.replace(s)) : this.replace(value);\n  }\n}","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Socket, IO, Input as ReteInput } from 'rete';\nimport { SocketType } from '../types';\n\n@Component({\n  selector: 'rete-socket',\n  template: `<div *ngIf=\"socket\" class=\"socket\" [ngClass]=\"[type, socket.name]\" [title]=\"socket.name\"></div>`,\n  styleUrls: ['./socket.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SocketComponent {\n  @Input() socket!: Socket;\n  @Input() io!: IO;\n\n  get type(): SocketType {\n    return this.io instanceof ReteInput ? 'input' : 'output';\n  }\n}\n","import { Directive, Input, ElementRef, OnInit } from '@angular/core';\nimport { Control } from 'rete';\nimport { NodeService } from './node.service';\n\n@Directive({\n  selector: '[rete-control]'\n})\nexport class ControlDirective implements OnInit {\n  @Input('rete-control') control!: Control;\n\n  constructor(private el: ElementRef, private service: NodeService) {}\n\n  ngOnInit() {\n    this.service.bindControl(this.el.nativeElement, this.control);\n  }\n}\n","import { Directive, Input, ElementRef, OnInit } from '@angular/core';\nimport { IO, Input as ReteInput } from 'rete';\nimport { NodeService } from './node.service';\nimport { SocketType } from './types';\n\n@Directive({\n  selector: '[rete-socket]'\n})\nexport class SocketDirective implements OnInit {\n    @Input() io!: IO;\n  \n    constructor(private el: ElementRef, private service: NodeService) {}\n  \n    get type(): SocketType {\n      return this.io instanceof ReteInput ? 'input' : 'output';\n    }\n  \n    ngOnInit() {\n      this.service.bindSocket(this.el.nativeElement, this.type, this.io);\n    }\n}\n","import { Component, Input, OnInit, Injector, ComponentFactoryResolver, ViewContainerRef, Type, ChangeDetectionStrategy } from '@angular/core';\nimport { Props } from './types';\n\n@Component({\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomComponent implements OnInit {\n  @Input() component!: Type<Component>;\n  @Input() props!: Props;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private injector: Injector,\n    private factoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit() {\n    const factory = this.factoryResolver.resolveComponentFactory(this.component);\n    const componentRef = factory.create(this.injector);\n    const { props } = this;\n\n    for(let key in props) {\n      Object.defineProperty(componentRef.instance, key, {\n        get() { return props[key]; },\n        set(val) { props[key] = val; }\n      })\n    }\n\n    this.vcr.insert(componentRef.hostView);\n  }\n\n  ngOnDestroy() {\n    this.vcr.detach(0);\n  }\n}\n","import { NgModule, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { createCustomElement } from '@angular/elements';\n\nimport { KebabPipe } from './kebab.pipe';\nimport { NodeComponent } from './node/node.component';\nimport { SocketComponent } from './socket/socket.component';\nimport { ControlDirective } from './control.directive';\nimport { SocketDirective } from './socket.directive';\nimport { CustomComponent } from './custom.component';\n\n@NgModule({\n  declarations: [\n    NodeComponent,\n    SocketComponent,\n    CustomComponent,\n    ControlDirective,\n    SocketDirective,\n    KebabPipe,\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    KebabPipe,\n    ControlDirective\n  ],\n  exports: [\n    NodeComponent,\n    CustomComponent,\n    SocketComponent,\n    ControlDirective,\n    SocketDirective,\n    KebabPipe\n  ],\n  entryComponents: [\n    NodeComponent,\n    SocketComponent,\n    CustomComponent\n  ]\n})\nexport class ReteModule {\n  constructor(injector: Injector) { // StaticInjectorError due to 'npm link'\n    const CustomElement = createCustomElement(CustomComponent, { injector });\n    if (!customElements.get('rete-element')) customElements.define('rete-element', CustomElement);\n  }\n}\n","import { Type } from '@angular/core';\nimport { NodeEditor } from 'rete';\nimport { AngularControl, ElementProps, AngularComponentData } from './types';\nimport { NodeComponent } from './node/node.component';\n\nfunction install(editor: NodeEditor, params : { component?: Type<any> } = {}) {\n    editor.on('rendernode', ({ el, node, component, bindControl, bindSocket }) => {\n        const ngComponent = component as unknown as AngularComponentData;\n\n        if (ngComponent.render && ngComponent.render !== 'angular') return;\n\n        const element = document.createElement('rete-element');\n        const props: ElementProps = element as any;\n\n        props.component = ngComponent.component || params.component || NodeComponent;\n        props.props = Object.assign({}, ngComponent.props || {}, {\n            node,\n            editor,\n            bindControl,\n            bindSocket\n        });\n\n        el.appendChild(element);\n    });\n\n    editor.on('rendercontrol', ({ el, control }) => {\n        const ngControl = control as unknown as AngularControl;\n\n        if (ngControl.render && ngControl.render !== 'angular') return;\n\n        const element = document.createElement('rete-element');\n        const props: ElementProps = element as any;\n\n        props.component = ngControl.component;\n        props.props = ngControl.props;\n\n        el.appendChild(element);\n    });\n    editor.on(['connectioncreated', 'connectionremoved'], connection => {\n        connection.output.node.update();\n        connection.input.node.update();\n    });\n    editor.on('nodeselected', () => {\n        editor.nodes.forEach(n => n.update());\n    });\n}\n\nexport const AngularRenderPlugin = {\n    name: 'angular-render',\n    install\n};\nexport { ReteModule } from './module';\nexport * from './types';\nexport { NodeService } from './node.service';\nexport { NodeComponent } from './node/node.component';\nexport { SocketComponent } from './socket/socket.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ControlDirective as Éµb} from './control.directive';\nexport {CustomComponent as Éµa} from './custom.component';\nexport {KebabPipe as Éµd} from './kebab.pipe';\nexport {SocketDirective as Éµc} from './socket.directive';"]}