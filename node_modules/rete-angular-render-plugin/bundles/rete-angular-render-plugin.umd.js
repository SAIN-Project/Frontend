(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/elements'), require('rete')) :
    typeof define === 'function' && define.amd ? define('rete-angular-render-plugin', ['exports', '@angular/core', '@angular/common', '@angular/elements', 'rete'], factory) :
    (global = global || self, factory(global['rete-angular-render-plugin'] = {}, global.ng.core, global.ng.common, global.ng.elements, global.rete));
}(this, (function (exports, core, common, elements, rete) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var NodeService = /** @class */ (function () {
        function NodeService() {
        }
        NodeService.prototype.setBindings = function (bindSocket, bindControl) {
            this.bindSocket = bindSocket;
            this.bindControl = bindControl;
        };
        NodeService = __decorate([
            core.Injectable()
        ], NodeService);
        return NodeService;
    }());

    var NodeComponent = /** @class */ (function () {
        function NodeComponent(service, cdr) {
            this.service = service;
            this.cdr = cdr;
        }
        NodeComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.service.setBindings(this.bindSocket, this.bindControl);
            this.node.update = function () { return _this.cdr.detectChanges(); };
        };
        Object.defineProperty(NodeComponent.prototype, "inputs", {
            get: function () {
                return Array.from(this.node.inputs.values());
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NodeComponent.prototype, "outputs", {
            get: function () {
                return Array.from(this.node.outputs.values());
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NodeComponent.prototype, "controls", {
            get: function () {
                return Array.from(this.node.controls.values());
            },
            enumerable: true,
            configurable: true
        });
        NodeComponent.prototype.selected = function () {
            return this.editor.selected.contains(this.node) ? 'selected' : '';
        };
        NodeComponent.ctorParameters = function () { return [
            { type: NodeService },
            { type: core.ChangeDetectorRef }
        ]; };
        __decorate([
            core.Input()
        ], NodeComponent.prototype, "editor", void 0);
        __decorate([
            core.Input()
        ], NodeComponent.prototype, "node", void 0);
        __decorate([
            core.Input()
        ], NodeComponent.prototype, "bindSocket", void 0);
        __decorate([
            core.Input()
        ], NodeComponent.prototype, "bindControl", void 0);
        NodeComponent = __decorate([
            core.Component({
                template: "<div class=\"node\" [ngClass]=\"[selected(), node.name] | kebab\">\n    <div class=\"title\">{{node.name}}</div>\n    <div class=\"output\" *ngFor=\"let output of outputs\">\n        <div class=\"output-title\">{{output.name}}</div>\n        <rete-socket rete-socket [io]=\"output\" [socket]=\"output.socket\"></rete-socket>\n    </div>\n    <div class=\"control\" *ngFor=\"let control of controls\" [rete-control]=\"control\"></div>\n    <div class=\"input\" *ngFor=\"let input of inputs\">\n        <rete-socket rete-socket [io]=\"input\" [socket]=\"input.socket\"></rete-socket>\n        <div class=\"input-title\" *ngIf=\"!input.showControl()\">{{input.name}}</div>\n        <div class=\"input-control\" *ngIf=\"input.showControl()\" [rete-control]=\"input.control\"></div>\n    </div>\n</div>",
                providers: [NodeService],
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                styles: [".node{background:rgba(110,136,255,.8);border:2px solid #4e58bf;border-radius:10px;cursor:pointer;min-width:180px;height:auto;padding-bottom:6px;box-sizing:content-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.node:hover{background:rgba(130,153,255,.8)}.node.selected{background:#ffd92c;border-color:#e3c000}.node .title{color:#fff;font-family:sans-serif;font-size:18px;padding:8px}.node .output{text-align:right}.node .input{text-align:left}.node .input-title,.node .output-title{vertical-align:middle;color:#fff;display:inline-block;font-family:sans-serif;font-size:14px;margin:6px;line-height:24px}.node .input-title[hidden],.node .output-title[hidden]{display:none}.node .input-control{z-index:1;width:calc(100% - 36px);vertical-align:middle;display:inline-block}.node .control{padding:6px 18px}"]
            })
        ], NodeComponent);
        return NodeComponent;
    }());

    var KebabPipe = /** @class */ (function () {
        function KebabPipe() {
        }
        KebabPipe.prototype.replace = function (s) {
            return s.toLowerCase().replace(/ /g, '-');
        };
        KebabPipe.prototype.transform = function (value) {
            var _this = this;
            return Array.isArray(value) ? value.map(function (s) { return _this.replace(s); }) : this.replace(value);
        };
        KebabPipe = __decorate([
            core.Pipe({ name: 'kebab' })
        ], KebabPipe);
        return KebabPipe;
    }());

    var SocketComponent = /** @class */ (function () {
        function SocketComponent() {
        }
        Object.defineProperty(SocketComponent.prototype, "type", {
            get: function () {
                return this.io instanceof rete.Input ? 'input' : 'output';
            },
            enumerable: true,
            configurable: true
        });
        __decorate([
            core.Input()
        ], SocketComponent.prototype, "socket", void 0);
        __decorate([
            core.Input()
        ], SocketComponent.prototype, "io", void 0);
        SocketComponent = __decorate([
            core.Component({
                selector: 'rete-socket',
                template: "<div *ngIf=\"socket\" class=\"socket\" [ngClass]=\"[type, socket.name]\" [title]=\"socket.name\"></div>",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                styles: [":host{display:inline-block}.socket{display:inline-block;cursor:pointer;border:1px solid #fff;border-radius:12px;width:24px;height:24px;margin:6px;vertical-align:middle;background:#96b38a;z-index:2;box-sizing:border-box}.socket:hover{border-width:4px}.socket.multiple{border-color:#ff0}.socket.output{margin-right:-12px}.socket.input{margin-left:-12px}"]
            })
        ], SocketComponent);
        return SocketComponent;
    }());

    var ControlDirective = /** @class */ (function () {
        function ControlDirective(el, service) {
            this.el = el;
            this.service = service;
        }
        ControlDirective.prototype.ngOnInit = function () {
            this.service.bindControl(this.el.nativeElement, this.control);
        };
        ControlDirective.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: NodeService }
        ]; };
        __decorate([
            core.Input('rete-control')
        ], ControlDirective.prototype, "control", void 0);
        ControlDirective = __decorate([
            core.Directive({
                selector: '[rete-control]'
            })
        ], ControlDirective);
        return ControlDirective;
    }());

    var SocketDirective = /** @class */ (function () {
        function SocketDirective(el, service) {
            this.el = el;
            this.service = service;
        }
        Object.defineProperty(SocketDirective.prototype, "type", {
            get: function () {
                return this.io instanceof rete.Input ? 'input' : 'output';
            },
            enumerable: true,
            configurable: true
        });
        SocketDirective.prototype.ngOnInit = function () {
            this.service.bindSocket(this.el.nativeElement, this.type, this.io);
        };
        SocketDirective.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: NodeService }
        ]; };
        __decorate([
            core.Input()
        ], SocketDirective.prototype, "io", void 0);
        SocketDirective = __decorate([
            core.Directive({
                selector: '[rete-socket]'
            })
        ], SocketDirective);
        return SocketDirective;
    }());

    var CustomComponent = /** @class */ (function () {
        function CustomComponent(vcr, injector, factoryResolver) {
            this.vcr = vcr;
            this.injector = injector;
            this.factoryResolver = factoryResolver;
        }
        CustomComponent.prototype.ngOnInit = function () {
            var factory = this.factoryResolver.resolveComponentFactory(this.component);
            var componentRef = factory.create(this.injector);
            var props = this.props;
            var _loop_1 = function (key) {
                Object.defineProperty(componentRef.instance, key, {
                    get: function () { return props[key]; },
                    set: function (val) { props[key] = val; }
                });
            };
            for (var key in props) {
                _loop_1(key);
            }
            this.vcr.insert(componentRef.hostView);
        };
        CustomComponent.prototype.ngOnDestroy = function () {
            this.vcr.detach(0);
        };
        CustomComponent.ctorParameters = function () { return [
            { type: core.ViewContainerRef },
            { type: core.Injector },
            { type: core.ComponentFactoryResolver }
        ]; };
        __decorate([
            core.Input()
        ], CustomComponent.prototype, "component", void 0);
        __decorate([
            core.Input()
        ], CustomComponent.prototype, "props", void 0);
        CustomComponent = __decorate([
            core.Component({
                template: '',
                changeDetection: core.ChangeDetectionStrategy.OnPush
            })
        ], CustomComponent);
        return CustomComponent;
    }());

    var ReteModule = /** @class */ (function () {
        function ReteModule(injector) {
            var CustomElement = elements.createCustomElement(CustomComponent, { injector: injector });
            if (!customElements.get('rete-element'))
                customElements.define('rete-element', CustomElement);
        }
        ReteModule.ctorParameters = function () { return [
            { type: core.Injector }
        ]; };
        ReteModule = __decorate([
            core.NgModule({
                declarations: [
                    NodeComponent,
                    SocketComponent,
                    CustomComponent,
                    ControlDirective,
                    SocketDirective,
                    KebabPipe,
                ],
                imports: [
                    common.CommonModule
                ],
                providers: [
                    KebabPipe,
                    ControlDirective
                ],
                exports: [
                    NodeComponent,
                    CustomComponent,
                    SocketComponent,
                    ControlDirective,
                    SocketDirective,
                    KebabPipe
                ],
                entryComponents: [
                    NodeComponent,
                    SocketComponent,
                    CustomComponent
                ]
            })
        ], ReteModule);
        return ReteModule;
    }());

    function install(editor, params) {
        if (params === void 0) { params = {}; }
        editor.on('rendernode', function (_a) {
            var el = _a.el, node = _a.node, component = _a.component, bindControl = _a.bindControl, bindSocket = _a.bindSocket;
            var ngComponent = component;
            if (ngComponent.render && ngComponent.render !== 'angular')
                return;
            var element = document.createElement('rete-element');
            var props = element;
            props.component = ngComponent.component || params.component || NodeComponent;
            props.props = Object.assign({}, ngComponent.props || {}, {
                node: node,
                editor: editor,
                bindControl: bindControl,
                bindSocket: bindSocket
            });
            el.appendChild(element);
        });
        editor.on('rendercontrol', function (_a) {
            var el = _a.el, control = _a.control;
            var ngControl = control;
            if (ngControl.render && ngControl.render !== 'angular')
                return;
            var element = document.createElement('rete-element');
            var props = element;
            props.component = ngControl.component;
            props.props = ngControl.props;
            el.appendChild(element);
        });
        editor.on(['connectioncreated', 'connectionremoved'], function (connection) {
            connection.output.node.update();
            connection.input.node.update();
        });
        editor.on('nodeselected', function () {
            editor.nodes.forEach(function (n) { return n.update(); });
        });
    }
    var AngularRenderPlugin = {
        name: 'angular-render',
        install: install
    };

    exports.AngularRenderPlugin = AngularRenderPlugin;
    exports.NodeComponent = NodeComponent;
    exports.NodeService = NodeService;
    exports.ReteModule = ReteModule;
    exports.SocketComponent = SocketComponent;
    exports.ɵa = CustomComponent;
    exports.ɵb = ControlDirective;
    exports.ɵc = SocketDirective;
    exports.ɵd = KebabPipe;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=rete-angular-render-plugin.umd.js.map
