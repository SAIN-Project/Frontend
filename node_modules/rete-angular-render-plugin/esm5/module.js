import * as tslib_1 from "tslib";
import { NgModule, Injector } from '@angular/core';
import { CommonModule } from '@angular/common';
import { createCustomElement } from '@angular/elements';
import { KebabPipe } from './kebab.pipe';
import { NodeComponent } from './node/node.component';
import { SocketComponent } from './socket/socket.component';
import { ControlDirective } from './control.directive';
import { SocketDirective } from './socket.directive';
import { CustomComponent } from './custom.component';
var ReteModule = /** @class */ (function () {
    function ReteModule(injector) {
        var CustomElement = createCustomElement(CustomComponent, { injector: injector });
        if (!customElements.get('rete-element'))
            customElements.define('rete-element', CustomElement);
    }
    ReteModule.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    ReteModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                NodeComponent,
                SocketComponent,
                CustomComponent,
                ControlDirective,
                SocketDirective,
                KebabPipe,
            ],
            imports: [
                CommonModule
            ],
            providers: [
                KebabPipe,
                ControlDirective
            ],
            exports: [
                NodeComponent,
                CustomComponent,
                SocketComponent,
                ControlDirective,
                SocketDirective,
                KebabPipe
            ],
            entryComponents: [
                NodeComponent,
                SocketComponent,
                CustomComponent
            ]
        })
    ], ReteModule);
    return ReteModule;
}());
export { ReteModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vcmV0ZS1hbmd1bGFyLXJlbmRlci1wbHVnaW4vIiwic291cmNlcyI6WyJtb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUV4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQWdDckQ7SUFDRSxvQkFBWSxRQUFrQjtRQUM1QixJQUFNLGFBQWEsR0FBRyxtQkFBbUIsQ0FBQyxlQUFlLEVBQUUsRUFBRSxRQUFRLFVBQUEsRUFBRSxDQUFDLENBQUM7UUFDekUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDO1lBQUUsY0FBYyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDaEcsQ0FBQzs7Z0JBSHFCLFFBQVE7O0lBRG5CLFVBQVU7UUE5QnRCLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRTtnQkFDWixhQUFhO2dCQUNiLGVBQWU7Z0JBQ2YsZUFBZTtnQkFDZixnQkFBZ0I7Z0JBQ2hCLGVBQWU7Z0JBQ2YsU0FBUzthQUNWO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLFlBQVk7YUFDYjtZQUNELFNBQVMsRUFBRTtnQkFDVCxTQUFTO2dCQUNULGdCQUFnQjthQUNqQjtZQUNELE9BQU8sRUFBRTtnQkFDUCxhQUFhO2dCQUNiLGVBQWU7Z0JBQ2YsZUFBZTtnQkFDZixnQkFBZ0I7Z0JBQ2hCLGVBQWU7Z0JBQ2YsU0FBUzthQUNWO1lBQ0QsZUFBZSxFQUFFO2dCQUNmLGFBQWE7Z0JBQ2IsZUFBZTtnQkFDZixlQUFlO2FBQ2hCO1NBQ0YsQ0FBQztPQUNXLFVBQVUsQ0FLdEI7SUFBRCxpQkFBQztDQUFBLEFBTEQsSUFLQztTQUxZLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBjcmVhdGVDdXN0b21FbGVtZW50IH0gZnJvbSAnQGFuZ3VsYXIvZWxlbWVudHMnO1xuXG5pbXBvcnQgeyBLZWJhYlBpcGUgfSBmcm9tICcuL2tlYmFiLnBpcGUnO1xuaW1wb3J0IHsgTm9kZUNvbXBvbmVudCB9IGZyb20gJy4vbm9kZS9ub2RlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb2NrZXRDb21wb25lbnQgfSBmcm9tICcuL3NvY2tldC9zb2NrZXQuY29tcG9uZW50JztcbmltcG9ydCB7IENvbnRyb2xEaXJlY3RpdmUgfSBmcm9tICcuL2NvbnRyb2wuZGlyZWN0aXZlJztcbmltcG9ydCB7IFNvY2tldERpcmVjdGl2ZSB9IGZyb20gJy4vc29ja2V0LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBDdXN0b21Db21wb25lbnQgfSBmcm9tICcuL2N1c3RvbS5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBOb2RlQ29tcG9uZW50LFxuICAgIFNvY2tldENvbXBvbmVudCxcbiAgICBDdXN0b21Db21wb25lbnQsXG4gICAgQ29udHJvbERpcmVjdGl2ZSxcbiAgICBTb2NrZXREaXJlY3RpdmUsXG4gICAgS2ViYWJQaXBlLFxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIEtlYmFiUGlwZSxcbiAgICBDb250cm9sRGlyZWN0aXZlXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBOb2RlQ29tcG9uZW50LFxuICAgIEN1c3RvbUNvbXBvbmVudCxcbiAgICBTb2NrZXRDb21wb25lbnQsXG4gICAgQ29udHJvbERpcmVjdGl2ZSxcbiAgICBTb2NrZXREaXJlY3RpdmUsXG4gICAgS2ViYWJQaXBlXG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1xuICAgIE5vZGVDb21wb25lbnQsXG4gICAgU29ja2V0Q29tcG9uZW50LFxuICAgIEN1c3RvbUNvbXBvbmVudFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFJldGVNb2R1bGUge1xuICBjb25zdHJ1Y3RvcihpbmplY3RvcjogSW5qZWN0b3IpIHsgLy8gU3RhdGljSW5qZWN0b3JFcnJvciBkdWUgdG8gJ25wbSBsaW5rJ1xuICAgIGNvbnN0IEN1c3RvbUVsZW1lbnQgPSBjcmVhdGVDdXN0b21FbGVtZW50KEN1c3RvbUNvbXBvbmVudCwgeyBpbmplY3RvciB9KTtcbiAgICBpZiAoIWN1c3RvbUVsZW1lbnRzLmdldCgncmV0ZS1lbGVtZW50JykpIGN1c3RvbUVsZW1lbnRzLmRlZmluZSgncmV0ZS1lbGVtZW50JywgQ3VzdG9tRWxlbWVudCk7XG4gIH1cbn1cbiJdfQ==