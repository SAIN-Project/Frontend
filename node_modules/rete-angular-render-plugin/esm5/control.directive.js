import * as tslib_1 from "tslib";
import { Directive, Input, ElementRef, OnInit } from '@angular/core';
import { NodeService } from './node.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './node.service';
var ControlDirective = /** @class */ (function () {
    function ControlDirective(el, service) {
        this.el = el;
        this.service = service;
    }
    ControlDirective.prototype.ngOnInit = function () {
        this.service.bindControl(this.el.nativeElement, this.control);
    };
    ControlDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: NodeService }
    ]; };
    tslib_1.__decorate([
        Input('rete-control')
    ], ControlDirective.prototype, "control", void 0);
ControlDirective.ɵfac = function ControlDirective_Factory(t) { return new (t || ControlDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NodeService)); };
ControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ControlDirective, selectors: [["", "rete-control", ""]], inputs: { control: ["rete-control", "control"] } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ControlDirective, [{
        type: Directive,
        args: [{
                selector: '[rete-control]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.NodeService }]; }, { control: [{
            type: Input,
            args: ['rete-control']
        }] }); })();
    return ControlDirective;
}());
export { ControlDirective };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbInJldGUtYW5ndWxhci1yZW5kZXItcGx1Z2luL2NvbnRyb2wuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXJFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7O0FBSzdDO0FBQ0UsSUFFQSwwQkFBb0IsRUFBYyxFQUFVLE9BQW9CO0FBQUksUUFBaEQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtBQUFDLFFBQVMsWUFBTyxHQUFQLE9BQU8sQ0FBYTtBQUFDLElBQUUsQ0FBQztBQUN0RSxJQUNFLG1DQUFRLEdBQVI7QUFDRCxRQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNsRSxJQUFFLENBQUM7QUFDRjtBQUMyRCxnQkFObEMsVUFBVTtBQUFJLGdCQUFlLFdBQVc7QUFBRztBQUU5RCxJQUprQjtBQUV4QixRQUZFLEtBQUssQ0FBQyxjQUFjLENBQUM7QUFBQyxxREFBa0I7SUFEOUIsZ0JBQWdCLGdDQUg1QixTQUFTLENBQUMsY0FDVCxRQUFRLEVBQUUsZ0JBQWdCLFVBQzNCLENBQUMsUUFDVyxnQkFBZ0IsQ0FRNUI7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxJQURELHVCQUFDO0FBQ0EsQ0FEQSxBQVJELElBUUM7O0FBZkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFLQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQUEsQUFGQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQURBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBUUEsQUFBQSxBQUFBLEFBQUEsQUFSQSxBQVFBLEFBUkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIEVsZW1lbnRSZWYsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbCB9IGZyb20gJ3JldGUnO1xuaW1wb3J0IHsgTm9kZVNlcnZpY2UgfSBmcm9tICcuL25vZGUuc2VydmljZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tyZXRlLWNvbnRyb2xdJ1xufSlcbmV4cG9ydCBjbGFzcyBDb250cm9sRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCdyZXRlLWNvbnRyb2wnKSBjb250cm9sITogQ29udHJvbDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmLCBwcml2YXRlIHNlcnZpY2U6IE5vZGVTZXJ2aWNlKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2VydmljZS5iaW5kQ29udHJvbCh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsIHRoaXMuY29udHJvbCk7XG4gIH1cbn1cbiJdfQ==