import { ElementRef, EventEmitter, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { ControlValueAccessor, Validator, ValidationErrors } from '@angular/forms';
import { MonacoEditorLoaderService } from '../../services/monaco-editor-loader.service';
import { MonacoEditorConstructionOptions, MonacoStandaloneCodeEditor } from '../../interfaces';
export declare class MonacoEditorComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor, Validator {
    private monacoLoader;
    options: MonacoEditorConstructionOptions;
    init: EventEmitter<MonacoStandaloneCodeEditor>;
    editorContent: ElementRef;
    container: HTMLDivElement;
    editor: MonacoStandaloneCodeEditor;
    value: string;
    parseError: boolean;
    private onTouched;
    private onErrorStatusChange;
    private propagateChange;
    constructor(monacoLoader: MonacoEditorLoaderService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    writeValue(value: string): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    validate(): ValidationErrors;
    registerOnValidatorChange?(fn: () => void): void;
    private initMonaco;
    onResized(event: any): void;
    ngOnDestroy(): void;
}
