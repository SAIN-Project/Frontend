{"version":3,"file":"monaco-editor.component.d.ts","sources":["monaco-editor.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, Validator, ValidationErrors } from '@angular/forms';\nimport { MonacoEditorLoaderService } from '../../services/monaco-editor-loader.service';\nimport { MonacoEditorConstructionOptions, MonacoStandaloneCodeEditor } from '../../interfaces';\nexport declare class MonacoEditorComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor, Validator {\n    private monacoLoader;\n    options: MonacoEditorConstructionOptions;\n    init: EventEmitter<MonacoStandaloneCodeEditor>;\n    editorContent: ElementRef;\n    container: HTMLDivElement;\n    editor: MonacoStandaloneCodeEditor;\n    value: string;\n    parseError: boolean;\n    private onTouched;\n    private onErrorStatusChange;\n    private propagateChange;\n    constructor(monacoLoader: MonacoEditorLoaderService);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    writeValue(value: string): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    validate(): ValidationErrors;\n    registerOnValidatorChange?(fn: () => void): void;\n    private initMonaco;\n    onResized(event: any): void;\n    ngOnDestroy(): void;\n}\n"]}