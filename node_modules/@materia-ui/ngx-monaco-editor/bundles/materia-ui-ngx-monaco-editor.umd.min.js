!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("css-element-queries"),require("rxjs"),require("rxjs/operators"),require("@angular/forms")):"function"==typeof define&&define.amd?define("@materia-ui/ngx-monaco-editor",["exports","@angular/core","css-element-queries","rxjs","rxjs/operators","@angular/forms"],t):t(((e=e||self)["materia-ui"]=e["materia-ui"]||{},e["materia-ui"]["ngx-monaco-editor"]={}),e.ng.core,e.cssElementQueries,e.rxjs,e.rxjs.operators,e.ng.forms)}(this,(function(e,t,i,o,n,r){"use strict";var a=function(e,t,i,o,n){this.element=e,this.newWidth=t,this.newHeight=i,this.oldWidth=o,this.oldHeight=n};var s=function(){function e(e){this.element=e,this.resized=new t.EventEmitter}return e.prototype.ngOnInit=function(){var e=this;this.resizeEvent=new i.ResizeSensor(this.element.nativeElement,(function(t){return e.onResized()})),this.onResized()},e.prototype.onResized=function(){var e=this.element.nativeElement.clientWidth,t=this.element.nativeElement.clientHeight;if(e!==this.oldWidth||t!==this.oldHeight){var i=new a(this.element,e,t,this.oldWidth,this.oldHeight);this.oldWidth=this.element.nativeElement.clientWidth,this.oldHeight=this.element.nativeElement.clientHeight,this.resized.next(i)}},e.decorators=[{type:t.Directive,args:[{selector:"[materiaResized]",exportAs:"materiaResized"}]}],e.ctorParameters=function(){return[{type:t.ElementRef}]},e.propDecorators={resized:[{type:t.Output}]},e}();var d=function(){function e(e,t){var i=this;this.ngZone=e,this.monacoPathConfig=t,this.isMonacoLoaded$=new o.BehaviorSubject(!1),this._monacoPath="assets/monaco-editor/min/vs",window.monacoEditorAlreadyInitialized?e.run((function(){return i.isMonacoLoaded$.next(!0)})):(window.monacoEditorAlreadyInitialized=!0,this.monacoPathConfig&&(this.monacoPath=this.monacoPathConfig),this.loadMonaco())}return Object.defineProperty(e.prototype,"monacoPath",{set:function(e){e&&(this._monacoPath=e)},enumerable:!0,configurable:!0}),e.prototype.loadMonaco=function(){var e=this,t=function(){window.amdRequire=window.require,e.nodeRequire&&(window.require=e.nodeRequire),window.amdRequire.config({paths:{vs:e._monacoPath}}),window.amdRequire(["vs/editor/editor.main"],(function(){e.ngZone.run((function(){return e.isMonacoLoaded$.next(!0)}))}))},i=null;window.require||window.amdRequire?window.amdRequire?t():(this.addElectronFixScripts(),this.nodeRequire=window.require,(i=document.createElement("script")).type="text/javascript",i.src=this._monacoPath+"/loader.js",i.addEventListener("load",t),document.body.appendChild(i)):((i=document.createElement("script")).type="text/javascript",i.src=this._monacoPath+"/loader.js",i.addEventListener("load",t),document.body.appendChild(i))},e.prototype.addElectronFixScripts=function(){var e=document.createElement("script"),t=document.createTextNode("self.module = undefined;"),i=document.createTextNode("self.process.browser = true;");e.appendChild(t),e.appendChild(i),document.body.appendChild(e)},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:t.NgZone},{type:String,decorators:[{type:t.Optional},{type:t.Inject,args:["MONACO_PATH"]}]}]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e(t.ɵɵinject(t.NgZone),t.ɵɵinject("MONACO_PATH",8))},token:e,providedIn:"root"}),e}();var c=function(){function e(e,t,i){this.templateRef=e,this.viewContainer=t,this.monacoEditorLoaderService=i,this.isMonacoLoaded$=this.monacoEditorLoaderService.isMonacoLoaded$.asObservable(),this.destroyed$=new o.Subject}return e.prototype.ngOnInit=function(){var e=this;this.isMonacoLoaded$.pipe(n.takeUntil(this.destroyed$)).subscribe((function(t){if(!t)return e.viewContainer.clear();e.viewContainer.createEmbeddedView(e.templateRef)}))},e.prototype.ngOnDestroy=function(){this.destroyed$.next(),this.destroyed$.complete()},e.decorators=[{type:t.Directive,args:[{selector:"[ngxLoadMonacoEditor]"}]}],e.ctorParameters=function(){return[{type:t.TemplateRef},{type:t.ViewContainerRef},{type:d}]},e}();var h=function(){function e(e){this.monacoLoader=e,this.init=new t.EventEmitter,this.propagateChange=function(e){}}return e.prototype.ngOnInit=function(){var e=this;this.container=this.editorContent.nativeElement,this.monacoLoader.isMonacoLoaded$.pipe(n.filter((function(e){return e})),n.take(1)).subscribe((function(){e.initMonaco()}))},e.prototype.ngOnChanges=function(e){this.editor&&e.options&&!e.options.firstChange&&(e.options.previousValue.language!==e.options.currentValue.language&&monaco.editor.setModelLanguage(this.editor.getModel(),this.options&&this.options.language?this.options.language:"text"),e.options.previousValue.theme!==e.options.currentValue.theme&&monaco.editor.setTheme(e.options.currentValue.theme),this.editor.updateOptions(e.options.currentValue))},e.prototype.writeValue=function(e){this.value=e,this.editor&&e?this.editor.setValue(e):this.editor&&this.editor.setValue("")},e.prototype.registerOnChange=function(e){this.propagateChange=e},e.prototype.registerOnTouched=function(e){this.onTouched=e},e.prototype.validate=function(){return this.parseError?{parseError:{valid:!1}}:null},e.prototype.registerOnValidatorChange=function(e){this.onErrorStatusChange=e},e.prototype.initMonaco=function(){var e=this,t={value:[this.value].join("\n"),language:"text",automaticLayout:!0,scrollBeyondLastLine:!1,theme:"vc"};this.options&&(t=Object.assign({},t,this.options)),this.editor=monaco.editor.create(this.container,t),this.editor.layout(),this.editor.onDidChangeModelContent((function(){e.propagateChange(e.editor.getValue())})),this.editor.onDidChangeModelDecorations((function(){var t=e.parseError;monaco.editor.getModelMarkers({}).map((function(e){return e.message})).join(", ")?e.parseError=!0:e.parseError=!1,t!==e.parseError&&e.onErrorStatusChange()})),this.editor.onDidBlurEditorText((function(){e.onTouched()})),this.init.emit(this.editor)},e.prototype.onResized=function(e){this.editor&&this.editor.layout({width:e.newWidth,height:e.newHeight})},e.prototype.ngOnDestroy=function(){this.editor&&this.editor.dispose()},e.decorators=[{type:t.Component,args:[{selector:"ngx-monaco-editor",template:'<div #container materiaResized (resized)="onResized($event)" class="editor-container" fxFlex>\n\t<div class="wrapper">\n\t\t<div\n\t\t\t#editor\n\t\t\tclass="monaco-editor"\n\t\t\t[style.width.px]="container.offsetWidth"\n\t\t\t[style.height.px]="container.offsetHeight" style="min-width: 0;"\n\t\t></div>\n\t</div>\n</div>',changeDetection:t.ChangeDetectionStrategy.OnPush,providers:[{provide:r.NG_VALUE_ACCESSOR,useExisting:t.forwardRef((function(){return e})),multi:!0},{provide:r.NG_VALIDATORS,useExisting:t.forwardRef((function(){return e})),multi:!0}],styles:[":host {\n\tflex: 1;\n\tbox-sizing: border-box;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-wdith: 0;\n}\n.wrapper {\n\twidth: 0px; height: 0px;\n}\n.editor-container {\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tposition: relative;\n\tmin-width: 0;\n\tdisplay: table;\n\twidth: 100%;\n\theight: 100%;\n}"]}]}],e.ctorParameters=function(){return[{type:d}]},e.propDecorators={options:[{type:t.Input}],init:[{type:t.Output}],editorContent:[{type:t.ViewChild,args:["editor",{static:!0}]}]},e}();var p=function(){function e(e){this.monacoLoader=e,this.init=new t.EventEmitter}return e.prototype.ngOnInit=function(){var e=this;this.container=this.editorContent.nativeElement,this.monacoLoader.isMonacoLoaded$.pipe(n.filter((function(e){return e})),n.take(1)).subscribe((function(){e.initMonaco()}))},e.prototype.ngOnChanges=function(e){if(this.editor&&(e.code&&!e.code.firstChange||e.modified&&!e.modified.firstChange)){var t=monaco.editor.createModel(this.modified),i=monaco.editor.createModel(this.original);this.editor.setModel({original:i,modified:t})}this.editor&&e.options&&!e.options.firstChange&&(e.options.previousValue.theme!==e.options.currentValue.theme&&monaco.editor.setTheme(e.options.currentValue.theme),this.editor.updateOptions(e.options.currentValue))},e.prototype.initMonaco=function(){var e={readOnly:!0,theme:"vc"};this.options&&(e=Object.assign({},e,this.options)),this.editor=monaco.editor.createDiffEditor(this.container,e);var t=monaco.editor.createModel(this.original),i=monaco.editor.createModel(this.modified);this.editor.setModel({original:t,modified:i}),this.editor.layout(),this.init.emit(this.editor)},e.prototype.onResized=function(e){this.editor&&this.editor.layout({width:e.newWidth,height:e.newHeight})},e.prototype.ngOnDestroy=function(){this.editor&&this.editor.dispose()},e.decorators=[{type:t.Component,args:[{selector:"ngx-monaco-diff-editor",template:'<div #container materiaResized (resized)="onResized($event)" class="editor-container" fxFlex>\n<div class="wrapper">\n  <div\n    #diffEditor\n    class="monaco-editor"\n    [style.width.px]="container.offsetWidth"\n    [style.height.px]="container.offsetHeight" style="min-width: 0;"\n  ></div>\n</div>\n</div>',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[":host {\nflex: 1;\nbox-sizing: border-box;\nflex-direction: column;\ndisplay: flex;\noverflow: hidden;\nmax-width: 100%;\nmin-wdith: 0;\n}\n.wrapper {\nwidth: 0px; height: 0px;\n}\n.editor-container {\ntext-overflow: ellipsis;\noverflow: hidden;\nposition: relative;\nmin-width: 0;\ndisplay: table;\nwidth: 100%;\nheight: 100%;\n}"]}]}],e.ctorParameters=function(){return[{type:d}]},e.propDecorators={original:[{type:t.Input}],modified:[{type:t.Input}],options:[{type:t.Input}],init:[{type:t.Output}],editorContent:[{type:t.ViewChild,args:["diffEditor",{static:!0}]}]},e}();var u=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[],declarations:[c,h,s,p],exports:[c,h,p,s],entryComponents:[h,p]}]}],e}();e.MONACO_PATH="MONACO_PATH",e.MonacoDiffEditorComponent=p,e.MonacoEditorComponent=h,e.MonacoEditorLoaderDirective=c,e.MonacoEditorLoaderService=d,e.MonacoEditorModule=u,e.ResizedDirective=s,e.ResizedEvent=a,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=materia-ui-ngx-monaco-editor.umd.min.js.map