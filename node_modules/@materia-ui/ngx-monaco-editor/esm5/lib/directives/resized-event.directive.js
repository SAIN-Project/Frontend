/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/resized-event.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';
import { ResizeSensor } from 'css-element-queries';
import * as ɵngcc0 from '@angular/core';
var ResizedEvent = /** @class */ (function () {
    function ResizedEvent(element, newWidth, newHeight, oldWidth, oldHeight) {
        this.element = element;
        this.newWidth = newWidth;
        this.newHeight = newHeight;
        this.oldWidth = oldWidth;
        this.oldHeight = oldHeight;
    }
    return ResizedEvent;
}());
export { ResizedEvent };
if (false) {
    /** @type {?} */
    ResizedEvent.prototype.element;
    /** @type {?} */
    ResizedEvent.prototype.newWidth;
    /** @type {?} */
    ResizedEvent.prototype.newHeight;
    /** @type {?} */
    ResizedEvent.prototype.oldWidth;
    /** @type {?} */
    ResizedEvent.prototype.oldHeight;
}
var ResizedDirective = /** @class */ (function () {
    function ResizedDirective(element) {
        this.element = element;
        this.resized = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ResizedDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.resizeEvent = new ResizeSensor(this.element.nativeElement, (/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return _this.onResized(); }));
        this.onResized();
    };
    /**
     * @private
     * @return {?}
     */
    ResizedDirective.prototype.onResized = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var newWidth = this.element.nativeElement.clientWidth;
        /** @type {?} */
        var newHeight = this.element.nativeElement.clientHeight;
        if (newWidth === this.oldWidth && newHeight === this.oldHeight) {
            return;
        }
        /** @type {?} */
        var event = new ResizedEvent(this.element, newWidth, newHeight, this.oldWidth, this.oldHeight);
        this.oldWidth = this.element.nativeElement.clientWidth;
        this.oldHeight = this.element.nativeElement.clientHeight;
        this.resized.next(event);
    };
    /** @nocollapse */
    ResizedDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ResizedDirective.propDecorators = {
        resized: [{ type: Output }]
    };
ResizedDirective.ɵfac = function ResizedDirective_Factory(t) { return new (t || ResizedDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ResizedDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ResizedDirective, selectors: [["", "materiaResized", ""]], outputs: { resized: "resized" }, exportAs: ["materiaResized"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ResizedDirective, [{
        type: Directive,
        args: [{
                selector: '[materiaResized]',
                exportAs: 'materiaResized'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { resized: [{
            type: Output
        }] }); })();
    return ResizedDirective;
}());
export { ResizedDirective };
if (false) {
    /** @type {?} */
    ResizedDirective.prototype.resized;
    /**
     * @type {?}
     * @private
     */
    ResizedDirective.prototype.oldWidth;
    /**
     * @type {?}
     * @private
     */
    ResizedDirective.prototype.oldHeight;
    /**
     * @type {?}
     * @private
     */
    ResizedDirective.prototype.resizeEvent;
    /**
     * @type {?}
     * @private
     */
    ResizedDirective.prototype.element;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplZC1ldmVudC5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIkBtYXRlcmlhLXVpL25neC1tb25hY28tZWRpdG9yL2xpYi9kaXJlY3RpdmVzL3Jlc2l6ZWQtZXZlbnQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNwRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7O0FBRW5EO0FBRUcsSUFEQyxzQkFDYSxPQUFtQixFQUNuQixRQUFnQixFQUNoQixTQUFpQixFQUNqQixRQUFnQixFQUNoQixTQUFpQjtBQUMvQixRQUxjLFlBQU8sR0FBUCxPQUFPLENBQVk7QUFBQyxRQUNwQixhQUFRLEdBQVIsUUFBUSxDQUFRO0FBQUMsUUFDakIsY0FBUyxHQUFULFNBQVMsQ0FBUTtBQUFDLFFBQ2xCLGFBQVEsR0FBUixRQUFRLENBQVE7QUFBQyxRQUNqQixjQUFTLEdBQVQsU0FBUyxDQUFRO0FBQ2xDLElBQVEsQ0FBQztBQUNULElBQUEsbUJBQUM7QUFBRCxDQUFDLEFBUkQsSUFRQztBQUNEO0FBRVc7QUFBYTtBQUNiLElBVkgsK0JBQTRCO0FBQUM7QUFDakIsSUFBWixnQ0FBeUI7QUFBQztBQUNkLElBQVosaUNBQTBCO0FBQUM7QUFDZixJQUFaLGdDQUF5QjtBQUFDO0FBQ2QsSUFBWixpQ0FBMEI7QUFDbEM7QUFHQTtBQUVLLElBVUQsMEJBQTZCLE9BQW1CO0FBQ3BELFFBRGlDLFlBQU8sR0FBUCxPQUFPLENBQVk7QUFBQyxRQU52QyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQWdCLENBQUM7QUFDekQsSUFNSSxDQUFDO0FBQ0w7QUFDTztBQUNKO0FBQVEsSUFEUCxtQ0FBUTtBQUFPO0FBQ0o7QUFBUSxJQURuQjtBQUFjLFFBQWQsaUJBR0M7QUFDTCxRQUhRLElBQUksQ0FBQyxXQUFXLEdB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QUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUF2Q0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBaEJBLEFBQUEsQUFtQkEsQUFBQSxBQW1DQSxBQUFBLEFBQUEsQUF6Q0EsQUF5Q0EsQUFyQ0EsQUFBQSxBQUVBLEFBQUEsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE91dHB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZXNpemVTZW5zb3IgfSBmcm9tICdjc3MtZWxlbWVudC1xdWVyaWVzJztcblxuZXhwb3J0IGNsYXNzIFJlc2l6ZWRFdmVudCB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHJlYWRvbmx5IGVsZW1lbnQ6IEVsZW1lbnRSZWYsXG4gICAgICAgIHJlYWRvbmx5IG5ld1dpZHRoOiBudW1iZXIsXG4gICAgICAgIHJlYWRvbmx5IG5ld0hlaWdodDogbnVtYmVyLFxuICAgICAgICByZWFkb25seSBvbGRXaWR0aDogbnVtYmVyLFxuICAgICAgICByZWFkb25seSBvbGRIZWlnaHQ6IG51bWJlclxuICAgICkgeyB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW21hdGVyaWFSZXNpemVkXScsXG4gICAgZXhwb3J0QXM6ICdtYXRlcmlhUmVzaXplZCdcbn0pXG5leHBvcnQgY2xhc3MgUmVzaXplZERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICBAT3V0cHV0KCkgcmVzaXplZCA9IG5ldyBFdmVudEVtaXR0ZXI8UmVzaXplZEV2ZW50PigpO1xuXG4gICAgcHJpdmF0ZSBvbGRXaWR0aDogbnVtYmVyO1xuICAgIHByaXZhdGUgb2xkSGVpZ2h0OiBudW1iZXI7XG4gICAgcHJpdmF0ZSByZXNpemVFdmVudDogUmVzaXplU2Vuc29yO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBlbGVtZW50OiBFbGVtZW50UmVmKSB7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMucmVzaXplRXZlbnQgPSBuZXcgUmVzaXplU2Vuc29yKHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LCB4ID0+IHRoaXMub25SZXNpemVkKCkpO1xuICAgICAgICB0aGlzLm9uUmVzaXplZCgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25SZXNpemVkKCk6IHZvaWQge1xuICAgICAgICBjb25zdCBuZXdXaWR0aCA9IHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LmNsaWVudFdpZHRoO1xuICAgICAgICBjb25zdCBuZXdIZWlnaHQgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5jbGllbnRIZWlnaHQ7XG5cbiAgICAgICAgaWYgKG5ld1dpZHRoID09PSB0aGlzLm9sZFdpZHRoICYmIG5ld0hlaWdodCA9PT0gdGhpcy5vbGRIZWlnaHQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IFJlc2l6ZWRFdmVudChcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudCxcbiAgICAgICAgICAgIG5ld1dpZHRoLFxuICAgICAgICAgICAgbmV3SGVpZ2h0LFxuICAgICAgICAgICAgdGhpcy5vbGRXaWR0aCxcbiAgICAgICAgICAgIHRoaXMub2xkSGVpZ2h0KTtcblxuICAgICAgICB0aGlzLm9sZFdpZHRoID0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuY2xpZW50V2lkdGg7XG4gICAgICAgIHRoaXMub2xkSGVpZ2h0ID0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuY2xpZW50SGVpZ2h0O1xuXG4gICAgICAgIHRoaXMucmVzaXplZC5uZXh0KGV2ZW50KTtcbiAgICB9XG5cbn1cbiJdfQ==